channel_groups = {
    # Shank index.
    0:
        {   
            # List of channels to keep for spike detection.
            'channels': range(32),
            
            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
            'graph': [
                (0, 1),
                (1, 2),
                (2, 3),
                (3, 4),
                (4, 5),
                (5, 6),
                (6, 7),
                (7, 8),
                (8, 9),
                (9, 10),
                (10, 11),
                (11, 12),
                (12, 13),
                (13, 14),
                (14, 15),
                (15, 16),
                (16, 17),
                (17, 18),
                (18, 19),
                (19, 20),
                (20, 21),
                (21, 22),
                (22, 23),
                (23, 24),
                (24, 25),
                (25, 26),
                (26, 27),
                (27, 28),
                (28, 29),
                (29, 30),
                (30, 31),
            ],
            
            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
            'geometry': {
                31: (0, 0),
                30: (0, 10),
                29: (0, 20),
                28: (0, 30),
                27: (0, 40),
                26: (0, 50),
                25: (0, 60),
                24: (0, 70),
                23: (0, 80),
                22: (0, 90),
                21: (0, 100),
                20: (0, 110),
                19: (0, 120),
                18: (0, 130),
                17: (0, 140),
                16: (0, 150),
                15: (0, 160),
                14: (0, 170),
                13: (0, 180),
                12: (0, 190),
                11: (0, 200),
                10: (0, 210),
                9: (0, 220),
                8: (0, 230),
                7: (0, 240),
                6: (0, 250),
                5: (0, 260),
                4: (0, 270),
                3: (0, 280),
                2: (0, 290),
                1: (0, 300),
                0: (0, 310),
            }
    }
}
